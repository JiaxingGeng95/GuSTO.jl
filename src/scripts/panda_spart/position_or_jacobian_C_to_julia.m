% Input: filename such as "p_panda_joint_1.jl"
%       Needs to have been generated using "panda_urdf.m"
%       using the matlab function "ccode(...)"

function [] = position_or_jacobian_C_to_julia(filename)

% filename = 'p_panda_joint_1.jl'

% ------------------------------------------------------
% Read equations in file
S = fileread(filename);
% Replace C-indexing with julia indexing:
%   [0][2] -> [0+1,1+2] (brackets change and indexing start at 1)
S = strrep(S,'][','+1,1+');

% Add all necessary lines of code for the julia function (julia file)
if (filename(1) == 'p')
% 	disp('p_ee')
	S = [strcat('export p', filename(2:end-3)), char(10), ...
	     strcat('function p', filename(2:end-3), '(x)'), char(10), ...
	    '	x1  = x[1]', char(10),  ...
	    '	x2  = x[2]', char(10),  ...
	    '	x3  = x[3]', char(10),  ...
	    '	x4  = x[4]', char(10),  ...
	    '	x5  = x[5]', char(10),  ...
	    '	x6  = x[6]', char(10),  ...
	    '	x7  = x[7]', char(10),  ...
	    '	x8  = x[8]', char(10),  ...
	    '	x9  = x[9]', char(10),  ...
	    '	x10 = x[10]', char(10), ...
	    '	x11 = x[11]', char(10), ...
	    '	x12 = x[12]', char(10), ...
	    '	x13 = x[13]', char(10), ...
	    '	x14 = x[14]', char(10), ...
	    char(10), ...
	    '	A0 = zeros(3)', char(10), ...
	    S, char(10), char(10), ...
	    '	return A0', char(10), ...
	    'end', char(10)];
elseif (filename(1) == 'J')
% 	disp('Jp_ee')
	S = [strcat('export J', filename(2:end-3)), char(10), ...
	     strcat('function J', filename(2:end-3), '(x)'), char(10), ...
	    '	x1  = x[1]', char(10),  ...
	    '	x2  = x[2]', char(10),  ...
	    '	x3  = x[3]', char(10),  ...
	    '	x4  = x[4]', char(10),  ...
	    '	x5  = x[5]', char(10),  ...
	    '	x6  = x[6]', char(10),  ...
	    '	x7  = x[7]', char(10),  ...
	    '	x8  = x[8]', char(10),  ...
	    '	x9  = x[9]', char(10),  ...
	    '	x10 = x[10]', char(10), ...
	    '	x11 = x[11]', char(10), ...
	    '	x12 = x[12]', char(10), ...
	    '	x13 = x[13]', char(10), ...
	    '	x14 = x[14]', char(10), ...
	    char(10), ...
	     'A0 = zeros(3, 14)', char(10), ...
	    S, char(10), char(10), ...
	    '	return A0', char(10), ...
	    'end', char(10)];
else
	disp('This is neither a position or a jacobian? Error.')
end

% FINISHED GETTING STRING OF file
% ---------------

% ------------------------------------------------------
% Overwrite everything (but with text of prev. file saved)
fileID = fopen(filename,'w');

if fileID == -1, error('Cannot open file %s', filename); end
fwrite(fileID, S, 'char');


%fprintf(fileID, '	return A0\nend');


fclose(fileID);
% ------------------------------------------------------

end
